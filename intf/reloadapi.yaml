openapi: 3.0.0
info:
  version: 1.0.8
  title: RELOADAPI
  description: >-
    This is the RESTful interface of the Reload Service.
    
    
    ---
    History
      * V0.0.1
        * Init
    ---
tags:
  - name: Overview
    description: ...
    externalDocs:
      description: ...
      url: ...
paths:
  "/MSISDNs/{targetMSISDN}/reloads/reloadByPartner":
    post:
      tags:
        - Reload By Partner
      summary: "Reload an MSISDN by a reload partner. "
      description: >-
        This resource reloads the targetMSISDN with the amount. The reload
        partner is responsible to charge the reload amount to the prepaid
        customer.
      operationId: reloadByPartner
      parameters:
        - $ref: "#/components/parameters/targetMSISDN"
        - $ref: "#/components/parameters/RequestID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerBody"
        required: true
      responses:
        "201":
          description: Succesful Response
          headers:
            RequestID:
              $ref: "#/components/schemas/RequestID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              examples:
                code1001:
                  $ref: "#/components/examples/code1001"
        "400":
          description: >-
            **BadRequest**: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers:
            RequestID: 
              $ref: "#/components/schemas/RequestID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              examples:
                code1101:
                  $ref: "#/components/examples/code1101"
security:
  - basicAuth: []
servers:
  - url: https://localhost:8083/v1
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    targetMSISDN:
      name: targetMSISDN
      in: path
      description: The prepaid MSISDN
      required: true
      schema:
        type: string
        format: string15   
    RequestID:
      name: RequestID
      in: header
      description: The RequestID is used by the API to trace the fulfillment of a request.
      schema:
        type: string
  examples:  
    code1001:
      value: 
        code: 1001
        message: "Success"
    code1101:
      value: 
        code: 1101
        message: "Mal parameter"
  schemas:
    PartnerParameter:
      type: object
      description: With this key-value-pair the consumer can define additional information to SRS. For example a shop name or a reason for the reload. (same in sas3_reloadPlus)
      properties:
        name:
          type: string
          format: string32
          example: Reason
        value:
          type: string
          format: string256
          example: Data Package has been charges by mistake.
    PartnerBody:
      type: object
      required:
      - amount
      properties:
        amount:
          description: The reload amount in CHF. (in sas3_reloadPlus this field is called reloadAmountCents, but the amount in cents)
          type: string
          allOf: 
          - $ref: '#/components/schemas/patternCHF'
          example: "10.50"
        reloadParameters:
          type: array
          items:
            $ref: "#/components/schemas/PartnerParameter"
    BaseResponse:
      type: object
      required:
        - code
      properties:
        code:
          type: integer
          format: int32
          example: 1001
    patternCHF:
      pattern: '^-?\d+\.\d{2}$'
    RequestID:
      description: |-
        RequestID is used by the API to trace the fulfillment of a
        request. The API user may provide its own request ID or can accept
        the request ID generated by the API. Format UUID (8849f372-ea61-5162-e053-344a080ab0a7).
      type: string
